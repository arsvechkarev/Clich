apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  signingConfigs {
    release {
      Properties properties = new Properties()
      properties.load(project.rootProject.file('local.properties').newDataInputStream())

      def keystorePath = properties.getProperty('keystore.path')
      def keystorePassword = properties.getProperty('keystore.storePassword')
      def keystoreKeyAlias = properties.getProperty('keystore.keyAlias')
      def keystoreKeyPassword = properties.getProperty('keystore.keyPassword')

      storeFile file(keystorePath)
      storePassword(keystorePassword)
      keyAlias = keystoreKeyAlias
      keyPassword(keystoreKeyPassword)
    }
  }
  def configs = rootProject.ext

  compileSdkVersion configs.compileSdkVersion
  defaultConfig {
    applicationId configs.applicationId
    minSdkVersion configs.minSdkVersion
    targetSdkVersion configs.targetSdkVersion
    versionCode configs.versionCode
    versionName configs.versionName
    testInstrumentationRunner configs.testInstrumentationRunner
  }

  buildTypes {
    release {
      minifyEnabled configs.minifyEnabled
      shrinkResources configs.shrinkResources
      proguardFiles(getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro')
      signingConfig signingConfigs.release
    }
  }

}

dependencies {
  implementation project(':core')
  implementation project(':storage')
  implementation project(':f-info')
  implementation project(':f-labels')
  implementation project(':f-words')

  def appDependencies = rootProject.ext.applicationDependencies

  implementation appDependencies.kotlin
  implementation appDependencies.ktx
  implementation appDependencies.appCompat
  implementation appDependencies.materialDesign
  implementation appDependencies.legacySupport
}